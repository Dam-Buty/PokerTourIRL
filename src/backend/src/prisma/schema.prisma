datasource db {
  // CR : √† ta place pour le dev j'utiliserais sqlite c'est vachement plus simple √† manoeuvrer
  // t'as juste un fichier que tu peux checkin dans le repo, tu peux m√™me en avoir plusieurs
  // (un √† vide, un avec tous tes joueurs pr√©-rentr√©s, etc...) et tu les renommes pour switcher de l'un √† l'autre
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
  // CR : pourquoi utiliser le relationMode prisma ? sur mysql/sqlite c'est beaucoup plus performant d'avoir des foreign key
}

generator client {
  provider = "prisma-client-js"
}

model Tournament {
  id        Int      @id @default(autoincrement())
  year      Int
  parties   Party[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Party {
  id           Int           @id @default(autoincrement())
  tournamentId Int
  date         DateTime
  playerStats  PlayerStats[]
  // CR : ü•ú la convention c'est `startedAt`, `endedAt` si tu veux suivre la m√™me convention que `outAt`
  // (je recommande). Aussi, pas besoin de r√©p√©ter le nom de la table dans la colonne.
  partyStarted DateTime? // nullable, will be set when the party starts
  partyEnded   DateTime? // nullable, will be set when the party ends
  // CR : ü•ú d'une mani√®re g√©n√©rale ce genre de commentaire a pas beaucoup de valeur. L'intention du code est claire.
  tournament   Tournament    @relation(fields: [tournamentId], references: [id])
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Player {
  id          Int           @id @default(autoincrement())
  name        String
  stats       PlayerStats[]
  phoneNumber String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

// CR : √ßa fait p√™teux √† mort mais perso je pr√©f√®re avoir les colonnes dans un certain ordre dans Prisma
// c'est : id, puis les id de relations, puis les colonnes normales, puis les relations, et les timestamps
// √† la fin. L'ordre importe peu, mais ce qui compte c'est de prendre l'habitude de respecter une convention. Ca r√©duit
// la charge mentale √† chaque fois que tu viens chercher un truc dans ton sch√©ma, tu me remercieras :D
model PlayerStats {
  id        Int       @id @default(autoincrement())
  partyId   Int
  playerId  Int
  points    Int
  kills     Int       @default(0)
  buyin     Int
  rebuys    Int
  position  Int?
  totalCost Float     @default(0.0)
  outAt     DateTime?
  party     Party     @relation(fields: [partyId], references: [id])
  player    Player    @relation(fields: [playerId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
